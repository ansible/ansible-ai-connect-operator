---
# Determine and set Authentication configuration secret
- name: Check for custom Authentication configuration
  k8s_info:
    kind: Secret
    namespace: '{{ ansible_operator_meta.namespace }}'
    name: '{{ auth.auth_secret_name }}'
  register: _custom_auth_config_resources
  when:
    - auth is defined
    - auth | length
    - auth.auth_secret_name is defined
    - auth.auth_secret_name | length
  no_log: "{{ no_log }}"

- name: Check for existing Authentication configuration
  k8s_info:
    kind: Secret
    namespace: '{{ ansible_operator_meta.namespace }}'
    name: '{{ ansible_operator_meta.name }}-auth-configuration'
  register: _existing_auth_config_resources
  no_log: "{{ no_log }}"

- name: Set Authentication configuration based on if user secret exists
  set_fact:
    _auth_config: '{{ _custom_auth_config_resources["resources"] | default([]) | length | ternary(_custom_auth_config_resources, _existing_auth_config_resources) }}'
  no_log: "{{ no_log }}"

- block:
    - name: Create Authentication configuration
      k8s:
        apply: true
        definition: "{{ lookup('template', 'secrets/auth.secret.yaml.j2') }}"
      no_log: "{{ no_log }}"

    - name: Read Authentication Configuration
      k8s_info:
        kind: Secret
        namespace: '{{ ansible_operator_meta.namespace }}'
        name: '{{ ansible_operator_meta.name }}-auth-configuration'
      register: _generated_auth_config_resources
      no_log: "{{ no_log }}"
  when: not _auth_config['resources'] | default([]) | length

- name: Set Authentication Configuration
  set_fact:
    auth_config: '{{ _generated_auth_config_resources["resources"] | default([]) | length | ternary(_generated_auth_config_resources, _auth_config) }}'
  no_log: "{{ no_log }}"

- name: Set actual Authentication configuration secret used
  set_fact:
    __auth_secret_name: "{{ auth_config['resources'][0]['metadata']['name'] }}"
