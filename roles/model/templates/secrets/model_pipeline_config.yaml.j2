---
apiVersion: v1
kind: Secret
metadata:
  name: '{{ ansible_operator_meta.name }}-model-pipeline-configuration'
  namespace: '{{ ansible_operator_meta.namespace }}'
  labels:
    app.kubernetes.io/name: '{{ ansible_operator_meta.name }}'
    app.kubernetes.io/part-of: '{{ ansible_operator_meta.name }}'
    app.kubernetes.io/managed-by: '{{ deployment_type }}-operator'
    app.kubernetes.io/component: '{{ deployment_type }}'
    app.kubernetes.io/operator-version: '{{ lookup("env", "OPERATOR_VERSION") }}'
stringData:
  config: |
{% if chatbot_config is defined %}
    ModelPipelineChatBot:
      config:
{% if not is_openshift and enable_http_backward_compatibility | default(false) %}
        inference_url: 'http://{{ ansible_operator_meta.name }}-chatbot-api.{{ ansible_operator_meta.namespace }}.svc.cluster.local:8080'
        verify_ssl: false
        # HTTP communication - no SSL verification needed
{% endif %}
{% if is_openshift %}
        inference_url: 'https://{{ ansible_operator_meta.name }}-chatbot-api.{{ ansible_operator_meta.namespace }}.svc.cluster.local:8443'
        verify_ssl: true
        # Using Python's ssl.create_default_context() for automatic certificate discovery
        # Service CA certificates are mounted to /var/run/secrets/kubernetes.io/serviceaccount/
{% endif %}
        model_id: '{{ chatbot_model }}'
        enable_health_check: 'True'
{% if _aap_gateway_url is defined or _aap_controller_url is defined %}
        mcp_servers:
{% if _aap_gateway_url is defined and _aap_controller_url is defined %}
          - name: 'mcp::aap-controller'
            type: 'controller'
{% endif %}
{% if _aap_gateway_url is defined %}
          - name: 'mcp::aap-lightspeed'
            type: 'lightspeed'
{% endif %}
{% endif %}
      provider: 'http'
    ModelPipelineStreamingChatBot:
      config:
{% if not is_openshift %}
        inference_url: 'http://{{ ansible_operator_meta.name }}-chatbot-api.{{ ansible_operator_meta.namespace }}.svc.cluster.local:8080'
        verify_ssl: false
{% endif %}
{% if is_openshift %}
        inference_url: 'https://{{ ansible_operator_meta.name }}-chatbot-api.{{ ansible_operator_meta.namespace }}.svc.cluster.local:8443'
        verify_ssl: true
        # Using Python's ssl.create_default_context() for automatic certificate discovery
        # Service CA certificates are mounted to /var/run/secrets/kubernetes.io/serviceaccount/
{% endif %}
        model_id: '{{ chatbot_model }}'
        enable_health_check: 'True'
{% if _aap_gateway_url is defined or _aap_controller_url is defined %}
        mcp_servers:
{% if _aap_gateway_url is defined and _aap_controller_url is defined %}
          - name: 'mcp::aap-controller'
            type: 'controller'
{% endif %}
{% if _aap_gateway_url is defined %}
          - name: 'mcp::aap-lightspeed'
            type: 'lightspeed'
{% endif %}
{% endif %}
      provider: 'http'
{% endif %}
{% if model_config is defined %}
    ModelPipelineCompletions:
      config:
        inference_url: '{{ model_url }}'
        api_key: '{{ model_api_key }}'
        model_id: '{{ model_id }}'
        verify_ssl: {{ model_verify_ssl | default(True) }}
        timeout: 15
        enable_health_check: 'True'
        health_check_api_key: '{{ model_api_key }}'
        health_check_model_id: '{{ model_id }}'
        enable_anonymization: {{ model_enable_anonymization | default(True) }}
{% if model_type == "wca" and model_idp_url is defined %}
        idp_url: '{{ model_idp_url }}'
{% endif %}
{% if model_type == "wca-onprem" %}
        username: '{{ model_username }}'
{% endif %}
      provider: '{{ model_type }}'
    ModelPipelineContentMatch:
      config:
        inference_url: '{{ model_url }}'
        api_key: '{{ model_api_key }}'
        model_id: '{{ model_id }}'
        verify_ssl: {{ model_verify_ssl | default(True) }}
        timeout: 15
        enable_health_check: 'True'
        health_check_api_key: '{{ model_api_key }}'
        health_check_model_id: '{{ model_id }}'
        enable_anonymization: {{ model_enable_anonymization | default(True) }}
{% if model_type == "wca" and model_idp_url is defined %}
        idp_url: '{{ model_idp_url }}'
{% endif %}
{% if model_type == "wca-onprem" %}
        username: '{{ model_username }}'
{% endif %}
      provider: '{{ model_type }}'
    ModelPipelinePlaybookGeneration:
      config:
        inference_url: '{{ model_url }}'
        api_key: '{{ model_api_key }}'
        model_id: '{{ model_id }}'
        verify_ssl: {{ model_verify_ssl | default(True) }}
        timeout: 15
        enable_health_check: 'True'
        health_check_api_key: '{{ model_api_key }}'
        health_check_model_id: '{{ model_id }}'
        enable_anonymization: {{ model_enable_anonymization | default(True) }}
{% if model_type == "wca" and model_idp_url is defined %}
        idp_url: '{{ model_idp_url }}'
{% endif %}
{% if model_type == "wca-onprem" %}
        username: '{{ model_username }}'
{% endif %}
      provider: '{{ model_type }}'
    ModelPipelinePlaybookExplanation:
      config:
        inference_url: '{{ model_url }}'
        api_key: '{{ model_api_key }}'
        model_id: '{{ model_id }}'
        verify_ssl: {{ model_verify_ssl | default(True) }}
        timeout: 15
        enable_health_check: 'True'
        health_check_api_key: '{{ model_api_key }}'
        health_check_model_id: '{{ model_id }}'
        enable_anonymization: {{ model_enable_anonymization | default(True) }}
{% if model_type == "wca" and model_idp_url is defined %}
        idp_url: '{{ model_idp_url }}'
{% endif %}
{% if model_type == "wca-onprem" %}
        username: '{{ model_username }}'
{% endif %}
      provider: '{{ model_type }}'
{% endif %}
{% if model_config is defined %}
    ModelPipelineRoleGeneration:
      config:
        inference_url: '{{ model_url }}'
        api_key: '{{ model_api_key }}'
        model_id: '{{ model_id }}'
        verify_ssl: {{ model_verify_ssl | default(True) }}
        timeout: 15
        enable_health_check: 'True'
        health_check_api_key: '{{ model_api_key }}'
        health_check_model_id: '{{ model_id }}'
        enable_anonymization: {{ model_enable_anonymization | default(True) }}
{% if model_type == "wca" and model_idp_url is defined %}
        idp_url: '{{ model_idp_url }}'
{% endif %}
{% if model_type == "wca-onprem" %}
        username: '{{ model_username }}'
{% endif %}
      provider: '{{ model_type }}'
{% endif %}
{% if model_config is defined %}
    ModelPipelineRoleExplanation:
      config:
        inference_url: '{{ model_url }}'
        api_key: '{{ model_api_key }}'
        model_id: '{{ model_id }}'
        verify_ssl: {{ model_verify_ssl | default(True) }}
        timeout: 15
        enable_health_check: 'True'
        health_check_api_key: '{{ model_api_key }}'
        health_check_model_id: '{{ model_id }}'
        enable_anonymization: {{ model_enable_anonymization | default(True) }}
{% if model_type == "wca" and model_idp_url is defined %}
        idp_url: '{{ model_idp_url }}'
{% endif %}
{% if model_type == "wca-onprem" %}
        username: '{{ model_username }}'
{% endif %}
      provider: '{{ model_type }}'
{% endif %}
