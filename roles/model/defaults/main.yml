---
# defaults file for AnsibleAIConnect

# ========================================
# Basic k8s configuration
# ----------------------------------------
kind: 'AnsibleAIConnect'
api_version: 'aiconnect.ansible.com/v1alpha1'
deployment_type: 'ansible-ai-connect'

image_pull_policy: IfNotPresent
image_pull_secrets: []

_image: quay.io/ansible/ansible-ai-connect-service
_image_version: "{{ lookup('env', 'DEFAULT_AI_CONNECT_VERSION') or 'latest' }}"

# Labels defined on the resource, which should be propagated to child resources
additional_labels: []
# ========================================


# ========================================
# No log :: Prevent Ansible logging
# ----------------------------------------
no_log: false
# ========================================


# ========================================
# AnsbileAIConnect
# ----------------------------------------
# Add a nodeSelector for the AnsibleAIConnect pods. It must match a node's labels for the pod
# to be scheduled on that node. Specify as literal block. E.g.:
# api:
#   node_selector: |
#     disktype: ssd
#     kubernetes.io/arch: amd64
#     kubernetes.io/os: linux

# ----------------------------------------
# Configuration for Authentication
# ----------------------------------------
auth_config_secret_name: ''
# ----------------------------------------

# ----------------------------------------
# Configuration for Model provider
# ----------------------------------------
model_config_secret_name: ''
# ========================================

# ----------------------------------------
# Configuration for Chatbot provider
# ----------------------------------------
chatbot_config_secret_name: ''
# ========================================


# ----------------------------------------
# Configuration for underlying service
# ----------------------------------------
api: {}
_api:
  # Name of kubernetes secret containing ANSIBLE_AI_MODEL_MESH_CONFIG:
  # - config: |
  #     ModelPipelineChatBot: ...
  #     ModelPipelineCompletions: ...
  #     ModelPipelineContentMatch: ...
  #     ModelPipelinePlaybookGeneration: ...
  #     ModelPipelinePlaybookExplanation: ...
  model_pipeline_secret: ''
  replicas: 1
  resource_requirements:
    limits:
      cpu: "1500m"
      memory: "8000Mi"
    requests:
      cpu: "500m"
      memory: "5000Mi"
  # Explicit parameters
# ========================================


# ========================================
# Service type and related configuration
# ----------------------------------------
service_type: 'ClusterIP'
loadbalancer_protocol: ''
loadbalancer_port: ''
# Port to be used for NodePort configuration, default is to auto-assign a port between 30000-32768
# nodeport_port: '30080'
# ========================================


# ========================================
# Ingress/Route
# ----------------------------------------
ingress_type: 'Route'
ingress_class_name: ''
ingress_path: '/'
ingress_path_type: 'Prefix'
ingress_api_version: 'networking.k8s.io/v1'
hostname: ''

# Add annotations to the ingress. Specify as literal block. E.g.:
# ingress_annotations: |
#   kubernetes.io/ingress.class: nginx
#   nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
ingress_annotations: ''

# TLS secret for the ingress. The secret either has to pre-exist with
# the corresponding cert and key or just be an indicator for where an automated
# process like cert-manager (enabled via annotations) will store the TLS
# certificate and key.
ingress_tls_secret: ''

# The TLS termination mechanism to use to access
# the services. Supported mechanism are: edge, passthrough
route_tls_termination_mechanism: edge

# Secret to lookup that provide the TLS specific credentials to deploy
route_tls_secret: ''

# Route API Version to support older version of the kubernetes services
route_api_version: 'route.openshift.io/v1'

# Host to create the root with.
# If not specific will default to <instance-name>-<namespace>-<routerCanonicalHostname>
route_host: ''
# ========================================


# ========================================
# Additional annotations
# ----------------------------------------
# Add annotations to the service account. Specify as literal block. E.g.:
# service_account_annotations: |
#   eks.amazonaws.com/role-arn: arn:aws:iam::<ACCOUNT_ID>:role/<IAM_ROLE_NAME>
service_account_annotations: ''

# Custom annotations for the ansible-ai-connect service. Specify as literal block. E.g.:
# service_annotations: |
#   environment: non-production
#   zone: internal
service_annotations: ''
# ========================================


# ========================================
# Custom CA Certificates
# ----------------------------------------
# Secret to lookup that provides the custom CA trusted bundle
bundle_cacert_secret: ''
# ----------------------------------------


# ========================================
# Django specific configuration
# ----------------------------------------
# Secret to lookup that provide the secret key
db_fields_encryption_secret: ''

admin_user: admin
admin_email: test@example.com
admin_password_secret: ''
# ========================================


# ========================================
# Unused by AnsibleAIConnect
# ----------------------------------------
# Disable UI container's nginx ipv6 listener
# ipv6_disabled: false
# websocket_ssl_verify: false
# ----------------------------------------
