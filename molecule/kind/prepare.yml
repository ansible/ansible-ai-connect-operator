---
- name: Prepare
  hosts: localhost
  connection: local
  gather_facts: false
  collections:
    - kubernetes.core
  vars:
    nginx_ingress_definition: 'https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml'
    metrics_server_definition: 'https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml'

  tasks:

    - name: Install NGINX ingress
      k8s:
        definition: |
          {{ lookup('url', nginx_ingress_definition, split_lines=False) | from_yaml_all }}
      tags:
        - always

    - name: Wait for NGINX ingress to become available
      k8s_info:
        kind: Pod
        namespace: ingress-nginx
        label_selectors:
          - app.kubernetes.io/component=controller
        wait: yes
        wait_timeout: 30
        wait_condition:
          type: Ready
      register: result  # For some reason, this task always fails on the first try...
      until: result is not failed
      tags:
        - always

    - name: Install metrics server
      k8s:
        definition: |
          {{ lookup('url', metrics_server_definition, split_lines=False) | from_yaml_all }}
      tags:
        - always

    - name: Patch metrics server
      k8s_json_patch:
        kind: Deployment
        name: metrics-server
        namespace: kube-system
        patch:
          - op: add
            path: /spec/template/spec/containers/0/args/-
            value: --kubelet-insecure-tls

    - name: Build operator image
      docker_image:
        build:
          path: '{{ project_dir }}'
          pull: no
        name: '{{ operator_image }}'
        tag: latest
        push: no
        source: build
        force_source: yes
      when:
        - operator_image is defined
        - operator_image == 'latest'

    - name: Load operator image into kind cluster
      command: kind load docker-image --name osdk-test '{{ operator_image }}'
      register: result
      changed_when: '"not yet present" in result.stdout'
      when:
        - operator_image is defined
        - operator_image == 'latest'

    - name: Load wisdom-service image into kind cluster
      command: kind load docker-image --name osdk-test '{{ wisdom_service_image }}:{{ wisdom_service_version }}'
      register: result
      changed_when: '"not yet present" in result.stdout'
      when:
        - wisdom_service_image is defined
        - wisdom_service_image != ''
        - wisdom_service_version is defined
        - wisdom_service_version != ''

    - name: Set testing image
      command: '{{ kustomize }} edit set image testing={{ operator_image }}'
      args:
        chdir: '{{ config_dir }}/testing'

    - name: Set pull policy
      command: '{{ kustomize }} edit add patch --path pull_policy/{{ operator_pull_policy }}.yaml'
      args:
        chdir: '{{ config_dir }}/testing'

    - name: Set testing namespace
      command: '{{ kustomize }} edit set namespace {{ namespace }}'
      args:
        chdir: '{{ config_dir }}/testing'
